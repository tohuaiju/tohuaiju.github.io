<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>数据结构绪论</title>
    <url>/2024/03/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BB%AA%E8%AE%BA/</url>
    <content><![CDATA[<h3 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话"></a>写在前面的话</h3><blockquote>
<p>内容有点多，以我自身的思考为主，如果是为了查阅一些基本概念，建议阅读其他优秀的帖子。</p>
<p>小白级的写文，大佬勿怪。如果有任何问题或建议，请通过邮件和我联系。</p>
</blockquote>
<p>接触过计算机基础的一定知道一句话，“算法+数据结构&#x3D;程序”，即“Algorithm+Data Structures&#x3D;Programs”，提出者是1984年图灵奖得主、Pascal之父——尼古拉斯·沃斯。</p>
<div style="width: 80%; margin: 0 auto; text-align: center;">
    <div style="width: 30%; max-width: 400px; display: inline-block; vertical-align: middle; text-align: center;">
        <img src="https://img2.imgtp.com/2024/03/19/36kcq3WK.png" alt="Your Image" style="max-width: 100%; height: auto;">
    </div>
    <div style="width: 40%; max-width: 400px; display: inline-block; vertical-align: middle; text-align: center; padding-left: 20px;">
        <div style="display: inline-block; text-align: center;">
            <p>
                Niklaus Wirth/尼古拉斯・沃斯
                <br>1934.02.15—2024.01.01
                <br>Pascal之父
                <br>1984年图灵奖得主
            </p>
        </div>
    </div>
</div>
<details> <summary>一些小声哔哔</summary>沉睡在长河里的先贤，好像并不会特地因为ta的逝世而难过，但当我们的时间轨迹有所接轨的时候，就别样惆怅了。</details>

<p>我们从这句话展开对数据结构的思考：学习一门新程序设计语言的唯一途径就是使用它编写程序<a href="#refer-anchor-1"><sup>1</sup></a>，而程序是由数据结构和算法组成，那我们是否可以把它们当做两个部分，分别进行耕耘。</p>
<p>答案毫无疑问是否定的（学习时候，先学基础数据结构，然后学一定算法，呃……不算分开吧）。</p>
<p>数据结构是算法实现的基础，就如同建筑的基石支撑着整座建筑一样。算法总是依赖于某种数据结构来实现，就像一位厨师需要合适的工具和材料来烹饪美食一样。在发展一种新算法的过程中，往往需要构建适合该算法的数据结构，这就像是为一场舞蹈创作特定的舞台道具一样。</p>
<p>一种数据结构如果脱离了算法，其实就像是一台停止运转的机器，失去了实用性和意义。实际上，在学习领域里，很少有一本书单纯地只谈论数据结构或者只谈论算法。它们常常被交织在一起，彼此相互依存，相辅相成。</p>
<p>虽然数据结构和算法有一定的区别，但它们的关系密不可分。算法更加抽象，强调对问题的建模和解决方案的设计，就像是指导你如何走舞步的舞谱。而数据结构则更接近实现的层面，关注具体的存储和操作细节，就像是舞台上的舞者在执行具体的舞步动作。</p>
<p>因此，可以说数据结构是数据之间的有机关系，而算法则是对数据进行操作的步骤。这两个概念之间的逻辑关系贯穿了整个程序世界，就像是一对相互依偎的双胞胎，无法分割。</p>
<p>所以我们所学的数据结构（只考虑基础数据结构，参考严蔚敏版）往往是前半部分介绍基础数据结构，例如线性表，队列，栈等；后半部分介绍一些简易算法，实现排序，查找等功能，目的也是为了不让所学成为粉墨登场的小丑，贻笑大方罢了。</p>
<h3 id="数据结构是什么？"><a href="#数据结构是什么？" class="headerlink" title="数据结构是什么？"></a>数据结构是什么？</h3><p>教材对于它的定义是，相互之间存在一种或多种特定关系的数据元素的集合。</p>
<p>以一般线性表的顺序实现方式（顺序表）为例：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    Elemtype data[Maxsize];</span><br><span class="line">    <span class="type">int</span> length;</span><br><span class="line">&#125;Sqlist;</span><br></pre></td></tr></table></figure>

<ol>
<li><strong>数据元素集合</strong>：在这段代码中，数据元素集合由数组 <code>data</code> 组成。每个元素都有一个索引，通过这个索引可以唯一地确定该元素在集合中的位置。</li>
<li><strong>特定关系</strong>：数据元素之间的特定关系体现在以下几个方面：<ul>
<li>数组中的元素是线性排列的，即每个元素都有一个相对位置。</li>
<li>顺序表中的每个元素都有一个相对位置和一个唯一的下标，这个下标与数组中元素的索引一一对应。</li>
<li><code>length</code> 变量记录了顺序表中当前存储的元素个数，这个值体现了元素之间的数量关系。</li>
</ul>
</li>
<li><strong>Maxsize 的设定</strong>：<code>Maxsize</code> 是一个常量，表示顺序表中数组 <code>data</code> 的最大容量。这个值限制了顺序表中可以存储的元素个数，也体现了元素之间的数量关系。</li>
</ol>
<p>总之，这段代码通过结构体 <code>Sqlist</code>，数组 <code>data</code>，和整型变量 <code>length</code> 的定义，体现了一种特定的数据元素集合，其中的元素之间存在着明确的位置关系和数量关系，这就是数据结构的基本特点之一。</p>
<h3 id="数据结构三要素"><a href="#数据结构三要素" class="headerlink" title="数据结构三要素"></a>数据结构三要素</h3><p>数据结构是由数据的逻辑结构、存储结构和数据运算三要素支撑的，它们共同描述了数据元素之间的组织方式、存储方式和操作方式，从而为数据的组织、存储和处理提供了基础和支持。</p>
<h4 id="逻辑结构"><a href="#逻辑结构" class="headerlink" title="逻辑结构"></a>逻辑结构</h4><p>逻辑结构是指数据元素之间的逻辑关系，即逻辑关系上描述数据（如何组织和描述数据元素之间的关系）。</p>
<p>值得注意的是，逻辑结构和数据存储（存储结构）是没有关系的，是独立于计算机的（在进行数据结构设计时，首先需要考虑数据元素之间的逻辑关系，已确定最合适的数据结构类型，然后再根据具体的存储需求选择合适的存储结构进行实现）。也就是说一种逻辑结构可以由多种数据存储方式实现，而且不分优劣，以合适当前需求为主。</p>
<p><img src="https://img2.imgtp.com/2024/03/20/HUQtQ8JZ.png"></p>
<h4 id="存储结构（物理结构）"><a href="#存储结构（物理结构）" class="headerlink" title="存储结构（物理结构）"></a>存储结构（物理结构）</h4><p>存储结构是指数据结构在计算机中的表示（也叫映像），包括数据元素的表示和关系的表示。</p>
<p>常见的有顺序，链式，索引及哈希存储。</p>
<p>……没更完，测试，24.03.20晚上之前更新完成</p>
<h4 id="数据运算"><a href="#数据运算" class="headerlink" title="数据运算"></a>数据运算</h4><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><div id="refer-anchor-1"></div>

<p>[1] Kernighan, Brian W., and Dennis M. Ritchie. (2022). C程序设计语言第二版. 徐宝文，李志 (译). 机械工业出版社, 第一页.</p>
<div id="refer-anchor-2"></div>

<p>[2] <a href="https://en.wikipedia.org/wiki/Main_Page">Wikipedia</a></p>
]]></content>
      <tags>
        <tag>考研</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
</search>
